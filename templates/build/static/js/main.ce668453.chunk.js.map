{"version":3,"sources":["serviceWorker.js","App.js","axios/index.js","components/Footer/index.js","utils/utils.js","pages/Login/index.js","components/Header/index.js","config/MenuConfig.js","components/NavLeft/index.js","admin.js","pages/Home/index.js","router.js","index.js"],"names":["Boolean","window","location","hostname","match","App","react_default","a","createElement","this","props","children","Component","Axios","options","Promise","resolve","reject","JsonP","url","param","err","response","status","messsage","axios","method","baseURL","timeout","params","data","crossDomain","then","Footer","className","React","utils","Option","time","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","FormItem","es_form","Item","Login","state","loginReq","href","src","alt","errorMsg","Login_LoginForm","ref","loginSubmit","Footer_Footer","LoginForm","e","preventDefault","_this","Object","assertThisInitialized","_this2","form","validateFieldsAndScroll","values","formValue","getFieldsValue","ajax","nick_name","username","password","dataType","res","modal","info","title","content","checkUsername","rule","value","callback","test","checkPassword","getFieldDecorator","labelCol","span","wrapperCol","label","rules","validator","input","prefix","icon","type","style","color","placeholder","es_button","onClick","create","Header","setState","userName","setInterval","sysTime","Util","getTime","_this3","jsonp","encodeURIComponent","results","weather_data","dayPictureUrl","weather","_this$props","menuType","menuName","row","es_col","menuList","key","SubMenu","menu","NavLeft","ItemGroup","renderMenu","map","item","MenuTreenod","menuConfig","theme","Admin","col","NavLeft_NavLeft","Header_Header","Home","ERouter","react_router_dom","src_App_0","react_router","path","component","render","admin_Admin","ReactDOM","router_ERouter","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ce668453.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport { Typography } from 'antd';\nimport './App.css';\n\n\nclass App extends Component {\n    render() {\n        return (\n            <div>\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import JsonP from 'jsonp'\nimport axios from 'axios'\nimport { Modal } from 'antd'\nexport default class Axios {\n    static jsonp(options) {\n        return new Promise((resolve, reject) => {\n            JsonP(options.url, {\n                param: 'callback'\n            }, function (err, response) {\n                if (response.status == 'success') {\n                    resolve(response);\n                } else {\n                    reject(response.messsage);\n                }\n            })\n        })\n    }\n\n    static ajax(options){\n        // let loading;\n        // if (options.data && options.data.isShowLoading !== false){\n        //     loading = document.getElementById('ajaxLoading');\n        //     loading.style.display = 'block';\n        // }\n        let baseApi = '/api';\n        return new Promise((resolve,reject)=>{\n            axios({\n                url:options.url,\n                method:'get',\n                baseURL:baseApi,\n                timeout:5000,\n                params: (options.data && options.data.params) || '',\n                crossDomain:true,\n            }).then((response)=>{\n                // if (options.data && options.data.isShowLoading !== false) {\n                //     loading = document.getElementById('ajaxLoading');\n                //     loading.style.display = 'none';\n                // }\n\n\n                    resolve(response);\n\n\n            })\n        });\n    }\n}\n","import React from 'react'\nimport './index.less'\nexport default class Footer extends React.Component {\n    render() {\n        return(\n            <div>\n                <div className=\"footer\">\n                    版权所有：Sports++ 技术支持：im73\n                </div>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport { Select } from 'antd'\nconst Option = Select.Option;\nexport default {\n    formateDate(time){\n        if(!time)return '';\n        let date = new Date(time);\n        return date.getFullYear()+'-'+(date.getMonth()+1)+'-'+date.getDate()+' '+date.getHours()+':'+date.getMinutes()+':'+date.getSeconds();\n    },\n    pagination(data,callback){\n        return {\n            onChange:(current)=>{\n                callback(current)\n            },\n            current:data.result.page,\n            pageSize:data.result.page_size,\n            total: data.result.total_count,\n            showTotal:()=>{\n                return `共${data.result.total_count}条`\n            },\n            showQuickJumper:true\n        }\n    },\n    // 格式化金额,单位:分(eg:430分=4.30元)\n    formatFee(fee, suffix = '') {\n        if (!fee) {\n            return 0;\n        }\n        return Number(fee).toFixed(2) + suffix;\n    },\n    // 格式化公里（eg:3000 = 3公里）\n    formatMileage(mileage, text) {\n        if (!mileage) {\n            return 0;\n        }\n        if (mileage >= 1000) {\n            text = text || \" km\";\n            return Math.floor(mileage / 100) / 10 + text;\n        } else {\n            text = text || \" m\";\n            return mileage + text;\n        }\n    },\n    // 隐藏手机号中间4位\n    formatPhone(phone) {\n        phone += '';\n        return phone.replace(/(\\d{3})\\d*(\\d{4})/g, '$1***$2')\n    },\n    // 隐藏身份证号中11位\n    formatIdentity(number) {\n        number += '';\n        return number.replace(/(\\d{3})\\d*(\\d{4})/g, '$1***********$2')\n    },\n    getOptionList(data){\n        if(!data){\n            return [];\n        }\n        let options = [] //[<Option value=\"0\" key=\"all_key\">全部</Option>];\n        data.map((item)=>{\n            options.push(<Option value={item.id} key={item.id}>{item.name}</Option>)\n        })\n        return options;\n    },\n    /**\n     * ETable 行点击通用函数\n     * @param {*选中行的索引} selectedRowKeys\n     * @param {*选中行对象} selectedItem\n     */\n    updateSelectedItem(selectedRowKeys, selectedRows, selectedIds) {\n        if (selectedIds) {\n            this.setState({\n                selectedRowKeys,\n                selectedIds: selectedIds,\n                selectedItem: selectedRows\n            })\n        } else {\n            this.setState({\n                selectedRowKeys,\n                selectedItem: selectedRows\n            })\n        }\n    },\n}\n","import React from 'react'\nimport {\n    Form, Icon, Input, Button, Checkbox,Modal\n} from 'antd';\nimport axios from '../../axios/index'\nimport Footer from '../../components/Footer'\nimport Utils from '../../utils/utils'\nimport './index.less'\nconst FormItem = Form.Item;\n\nexport default class Login extends React.Component {\n    state = {};\n\n    componentDidMount() {//每次进入登录页清除之前的登录信息\n\n    }\n\n    loginReq = (params) => {\n\n        window.location.href = '/#/';\n    };\n\n    render() {\n        return (\n            <div className=\"login-page\">\n                <div className=\"login-header\">\n                    <div className=\"logo\">\n                        <img src=\"/assets/logo-ant.svg\" alt=\"Sports++后台管理系统\"/>\n                        Sports++ 后台管理系统\n                    </div>\n                </div>\n                <div className=\"login-content-wrap\">\n                    <div className=\"login-content\">\n                        <div className=\"word\">Sports++ <br />你的比赛记录者</div>\n                        <div className=\"login-box\">\n                            <div className=\"error-msg-wrap\">\n                                <div\n                                    className={this.state.errorMsg?\"show\":\"\"}>\n                                    {this.state.errorMsg}\n                                </div>\n                            </div>\n                            <div className=\"title\">登录</div>\n                            <LoginForm ref=\"login\" loginSubmit={this.loginReq}/>\n                        </div>\n                    </div>\n                </div>\n                <Footer/>\n            </div>\n        )\n    }\n}\n\nclass LoginForm extends React.Component {\n    state = {};\n\n    loginSubmit = (e)=> {\n        e && e.preventDefault();\n        const _this = this;\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                var formValue = _this.props.form.getFieldsValue();\n                axios.ajax({\n                    url:'/back_login',\n                    data:{\n                        params:{\n                            nick_name:formValue.username,\n                            password: formValue.password,\n\n                        },\n\n                    },\n                    dataType:'jsonp',\n                }).then((res)=>\n                {\n                    if(res.status  ==  200)\n                    {\n                        window.location.href = '/#/';\n                    }\n                    else\n                    {\n                        Modal.info({\n                            title: '警告',\n                            content: '密码或账号出错'\n                        })\n                    }\n                })\n            }\n        });\n    };\n\n    checkUsername = (rule, value, callback) => {\n        var reg = /^\\w+$/;\n        if (!value) {\n            callback('请输入用户名!');\n        } else if (!reg.test(value)) {\n            callback('用户名只允许输入英文字母');\n        } else {\n            callback();\n        }\n    };\n\n    checkPassword = (rule, value, callback) => {\n        if (!value) {\n            callback('请输入密码!');\n        } else {\n            callback();\n        }\n    };\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        return (\n            <Form className=\"login-form\" labelCol={{ span: 4 }} wrapperCol={{ span: 18 }}>\n                <FormItem label=\"账号\">\n                    {getFieldDecorator('username', {\n\n                        rules: [{validator: this.checkUsername}]\n                    })(\n                        <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"Username\" />\n                    )}\n                </FormItem>\n                <FormItem label={\"密码\"}>\n                    {getFieldDecorator('password', {\n\n                        rules: [{validator: this.checkPassword}]\n                    })(\n                        <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"Password\" />\n                    )}\n                </FormItem>\n                <FormItem>\n                    <Button type=\"primary\" onClick={this.loginSubmit} className=\"login-form-button\">\n                        登录\n                    </Button>\n                </FormItem>\n            </Form>\n        )\n    }\n}\nLoginForm = Form.create({})(LoginForm);\n","import React from 'react'\nimport { Row,Col } from \"antd\"\nimport './index.less'\nimport Util from '../../utils/utils'\nimport axios from '../../axios'\nimport { connect } from 'react-redux'\nexport default class Header extends React.Component{\n    state={}\n    componentWillMount(){\n        this.setState({\n            userName:'im73'\n        })\n        setInterval(()=>{\n            let sysTime = Util.formateDate(new Date().getTime());\n            this.setState({\n                sysTime\n            })\n        },1000)\n        // this.getWeatherAPIData();\n    }\n\n    getWeathPIData(){\n        let city = '北京';\n        axios.jsonp({\n            url:'http://api.map.baidu.com/telematics/v3/weather?location='+encodeURIComponent(city)+'&output=json&ak=3p49MVra6urFRGOT9s8UBWr2'\n        }).then((res)=>{\n            if(res.status == 'success'){\n                let data = res.results[0].weather_data[0];\n                this.setState({\n                    dayPictureUrl:data.dayPictureUrl,\n                    weather:data.weather\n                })\n            }\n        })\n    }\n    render(){\n        const { menuName, menuType } = this.props;\n        return (\n            <div className=\"header\">\n                <Row className=\"header-top\">\n                    {\n                        menuType?\n                            <Col span=\"6\" className=\"logo\">\n                                <img src=\"/assets/logo-ant.svg\" alt=\"\"/>\n                                <span>IMooc 通用管理系统</span>\n                            </Col>:''\n                    }\n                    <Col span={menuType?18:24}>\n                        <span>欢迎，{this.state.userName}</span>\n                        <a href=\"#\">退出</a>\n                    </Col>\n                </Row>\n                {/*{*/}\n                    {/*menuType?'':*/}\n                        {/*<Row className=\"breadcrumb\">*/}\n                            {/*<Col span=\"4\" className=\"breadcrumb-title\">*/}\n                                {/*{menuName || '首页'}*/}\n                            {/*</Col>*/}\n                            {/*<Col span=\"20\" className=\"weather\">*/}\n                                {/*<span className=\"date\">{this.state.sysTime}</span>*/}\n                                {/*<span className=\"weather-img\">*/}\n                                    {/*<img src={this.state.dayPictureUrl} alt=\"\" />*/}\n                                {/*</span>*/}\n                                {/*<span className=\"weather-detail\">*/}\n                                    {/*{this.state.weather}*/}\n                                {/*</span>*/}\n                            {/*</Col>*/}\n                        {/*</Row>*/}\n                {/*}*/}\n            </div>\n        );\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        menuName: state.menuName\n    }\n};\n\n","const menuList = [\n    {\n        title:'首页',\n        key:'/home'\n    },\n    // {\n    //     title:'UI',\n    //     key:'/ui',\n    //     children:[\n    //         {\n    //             title:'按钮',\n    //             key:'/ui/buttons',\n    //         },\n    //         {\n    //             title:'弹框',\n    //             key:'/ui/modals',\n    //         },\n    //         {\n    //             title:'Loading',\n    //             key:'/ui/loadings',\n    //         },\n    //         {\n    //             title:'通知提醒',\n    //             key:'/ui/notification',\n    //         },\n    //         {\n    //             title:'全局Message',\n    //             key:'/ui/messages',\n    //         },\n    //         {\n    //             title:'Tab页签',\n    //             key:'/ui/tabs',\n    //         },\n    //         {\n    //             title:'图片画廊',\n    //             key:'/ui/gallery',\n    //         },\n    //         {\n    //             title:'轮播图',\n    //             key:'/ui/carousel',\n    //         }\n    //     ]\n    // },\n    {\n        title:'用户管理',\n        key:'/user',\n        children:[\n            {\n                title:'app用户',\n                key:'/user/app',\n            },\n            {\n                title:'后端用户',\n                key:'/user/back',\n            }\n        ]\n    },\n    {\n        title:'论坛管理',\n        key:'/forum',\n        // children:[\n        //     {\n        //         title:'基础表格',\n        //         key:'/table/basic',\n        //     },\n        //     {\n        //         title:'高级表格',\n        //         key:'/table/high',\n        //     }\n        // ]\n    },\n    // {\n    //     title:'富文本',\n    //     key:'/rich'\n    // },\n    // {\n    //     title:'城市管理',\n    //     key:'/city'\n    // },\n    // {\n    //     title:'订单管理',\n    //     key:'/order',\n    //     btnList:[\n    //         {\n    //             title:'订单详情',\n    //             key:'detail'\n    //         },\n    //         {\n    //             title:'结束订单',\n    //             key:'finish'\n    //         }\n    //     ]\n    // },\n    // {\n    //     title:'员工管理',\n    //     key:'/user'\n    // },\n    // {\n    //     title:'车辆地图',\n    //     key:'/bikeMap'\n    // },\n    // {\n    //     title:'图标',\n    //     key:'/charts',\n    //     children:[\n    //         {\n    //             title:'柱形图',\n    //             key:'/charts/bar'\n    //         },\n    //         {\n    //             title:'饼图',\n    //             key:'/charts/pie'\n    //         },\n    //         {\n    //             title:'折线图',\n    //             key:'/charts/line'\n    //         },\n    //     ]\n    // },\n    // {\n    //     title:'权限设置',\n    //     key:'/permission'\n    // },\n];\nexport default menuList;\n","import React from 'react'\n\n\nimport { Menu, Icon, Button } from 'antd';\n\n\nimport './index.less'\n\nimport menuConfig from './../../config/MenuConfig'\n\n\nconst SubMenu = Menu.SubMenu;\nconst MenuItemGroup = Menu.ItemGroup;\n\nexport default class NavLeft extends React.Component {\n    componentWillMount() {\n        const MenuTreenod = this.renderMenu(menuConfig);\n        this.setState(\n            {MenuTreenod}\n        )\n    }\n\n    renderMenu=(data)=>\n    {\n        return data.map(\n            (item)=>{\n                if(item.children)\n                {\n                    return(\n                        <SubMenu title={item.title} key={item.key}>\n                             {this.renderMenu(item.children)}\n                        </SubMenu>\n\n                    )\n                }\n                return (<Menu.Item title={item.title} key={item.key}>{item.title}</Menu.Item>)\n\n            }\n            )\n    }\n\n\n\n    render() {\n        return(\n            <div className=\"nav-left\">\n                    <div className=\"logo\">\n                        <img src=\"/assets/logo-ant.svg\" alt=\"\"/>\n                        <h1>Sports ++</h1>\n                    </div>\n                <Menu theme=\"dark\">\n                    {this.state.MenuTreenod}\n                </Menu>\n            </div>\n        );\n    }\n}\n","import React from 'react'\nimport {Row} from 'antd'\nimport Col from \"antd/es/grid/col\";\nimport  Header from './components/Header'\nimport  Footer from './components/Footer'\nimport  NavLeft from './components/NavLeft'\nimport Login from './pages/Login'\nimport  './style/common.less'\nexport default  class Admin extends React.Component\n{\n    render() {\n        return (\n            <Row className=\"container\">\n                <Col span=\"4\" className=\"nav-left\">\n                    <NavLeft/>\n                </Col>\n                <Col span=\"20\">\n                    <Header/>\n                    <Row className=\"content\">\n                    </Row>\n                    <Footer/>\n                </Col>\n            </Row>\n        );\n    }\n}\n","import React from 'react'\nimport './index.less'\nimport Footer from '../../components/Footer'\nimport Header from '../../components/Header'\nimport NavLeft from '../../components/NavLeft'\nimport {Row,Col} from 'antd'\nimport Login from \"../../admin\";\n\nexport default class Home extends React.Component{\n\n    render(){\n        return (\n            <Row className=\"home-wrap\">\n                <Col span=\"4\" className=\"nav-left\">\n                    <NavLeft/>\n                </Col>\n                <Col span=\"20\">\n                    <Header/>\n                    <Row className=\"content\">\n\n                    </Row>\n                    <Footer/>\n                </Col>\n            </Row>\n        );\n    }\n}\n","import React from 'react'\nimport { HashRouter, Route, Switch, Redirect} from 'react-router-dom'\nimport App from './App'\nimport Login from './pages/Login'\nimport Admin from './admin'\nimport Home from './pages/Home';\n\n\nexport default class ERouter extends React.Component{\n\n    render(){\n        return (\n            <HashRouter>\n                <App>\n                    <Switch>\n                        <Route path=\"/login\" component={Login}/>\n\n                        />\n                        <Route path=\"/\" render={()=>\n                            <Admin>\n                                <Switch>\n                                    <Route path='/home' component={Home} />\n                                    {/*<Route path=\"/ui/buttons\" component={Buttons} />*/}\n                                    {/*<Route path=\"/ui/modals\" component={Modals} />*/}\n                                    {/*<Route path=\"/ui/loadings\" component={Loadings} />*/}\n                                    {/*<Route path=\"/ui/notification\" component={Notice} />*/}\n                                    {/*<Route path=\"/ui/messages\" component={Messages} />*/}\n                                    {/*<Route path=\"/ui/tabs\" component={Tabs} />*/}\n                                    {/*<Route path=\"/ui/gallery\" component={Gallery} />*/}\n                                    {/*<Route path=\"/ui/carousel\" component={Carousel} />*/}\n                                    {/*<Route path=\"/form/login\" component={FormLogin} />*/}\n                                    {/*<Route path=\"/form/reg\" component={FormRegister} />*/}\n                                    {/*<Route path=\"/table/basic\" component={BasicTable} />*/}\n                                    {/*<Route path=\"/table/high\" component={HighTable} />*/}\n                                    {/*<Route path='/rich' component={Rich} />*/}\n                                    {/*<Route path=\"/city\" component={City} />*/}\n                                    {/*<Route path=\"/order\" component={Order} />*/}\n                                    {/*<Route path='/bikeMap' component={BikeMap} />*/}\n                                    {/*<Route path='/user' component={User} />*/}\n                                    {/*<Route path=\"/charts/bar\" component={Bar} />*/}\n                                    {/*<Route path=\"/charts/pie\" component={Pie} />*/}\n                                    {/*<Route path=\"/charts/line\" component={Line} />*/}\n                                    {/*<Route path=\"/permission\" component={Permission} />*/}\n                                    {/*<Redirect to=\"/home\" />*/}\n                                    {/* <Route component={NoMatch} /> */}\n                                </Switch>\n                            </Admin>\n                        } />\n                    </Switch>\n                </App>\n            </HashRouter>\n        );\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import Life from './pages/demo/Life';\nimport * as serviceWorker from './serviceWorker';\nimport  ERoute from './router';\nReactDOM.render(<ERoute />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}